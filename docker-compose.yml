# ===== Comandos de submodulos
# Crear: git submodule add <URL-del-repositorio> <ruta/del/submodulo>
# Actualizar: git submodule update --remote
# Clonar: git submodule update --init --recursive
# ==========

services:
  # =============== Servicios PÃºblicos ===============
  web_upy:
    build: .
    container_name: web_upy
    ports:
      - "501:501"
    expose:
      - "501"
    env_file:
      - .env
    # networks:
      # - proxy_net

  web_visualization:
    build:
      context: ./Files/9th_quarter/visualization-tools/Web
    container_name: web_visualization
    ports:
      - "502:502"
    expose:
      - "502"
    env_file:
      - .env
    # depends_on:
    #   - api_visualization
    networks:
      - upy_net
      # - proxy_net

  # api_visualization:
  #   build:
  #     context: ./Files/9th_quarter/visualization-tools/API
  #   container_name: api_visualization
  #   ports:
  #     - "503:503"
  #   expose:
  #     - "503"
  #   env_file:
  #     - .env
  #   depends_on:
  #     - mongo_visualization
  #     - postgres_visualization
  #   networks:
  #     - upy_net
  #     - proxy_net
      
  
  
  

  # =============== Servicios Privados ===============
  # gen_visualization:
  #   build:
  #     context: ./Generator
  #   container_name: gen_visualization
  #   depends_on:
  #     - api_visualization
  #   env_file:
  #     - .env

  # mongo_visualization:
  #   image: mongo:6.0
  #   container_name: mongo_visualization
  #   expose:
  #     - "27017"
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
  #     - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
  #     - MONGO_INITDB_DATABASE=${MONGO_DB}
  #   volumes:
  #     - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #     - mongo_data:/data/db
  #   networks:
  #     - upy_net

  # postgres_visualization:
  #   image: postgres:15
  #   container_name: postgres_visualization
  #   expose:
  #     - "5432"
  #   environment:
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - upy_net

networks:
  upy_net:
    driver: bridge
  # proxy_net:
    # external: true

# volumes:
#   mongo_data:
#     driver: local
#   postgres_data:
#     driver: local
